<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heroku.mapper.FortestMapper" >
  <resultMap id="BaseResultMap" type="com.heroku.entity.Fortest" >
    <result column="first" property="first" jdbcType="OTHER" typeHandler="com.manniwood.mmpt.typehandlers.TextArrayTypeHandler" />
    <result column="second" property="second" jdbcType="OTHER" typeHandler="com.manniwood.mmpt.typehandlers.JSONTypeHandler" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.firstCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler} and #{criterion.secondValue,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.secondCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler} and #{criterion.secondValue,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.firstCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler} and #{criterion.secondValue,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.secondCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler} and #{criterion.secondValue,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    first, second
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.heroku.entity.FortestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.fortest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.heroku.entity.FortestExample" >
    delete from public.fortest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.heroku.entity.Fortest" >
    insert into public.fortest (first, 
      second
      )
    values (#{first,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler}, 
      #{second,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.heroku.entity.Fortest" >
    insert into public.fortest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="first != null" >
        first,
      </if>
      <if test="second != null" >
        second,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="first != null" >
        #{first,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler},
      </if>
      <if test="second != null" >
        #{second,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.heroku.entity.FortestExample" resultType="java.lang.Integer" >
    select count(*) from public.fortest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update public.fortest
    <set >
      <if test="record.first != null" >
        first = #{record.first,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler},
      </if>
      <if test="record.second != null" >
        second = #{record.second,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update public.fortest
    set first = #{record.first,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.TextArrayTypeHandler},
      second = #{record.second,jdbcType=OTHER,typeHandler=com.manniwood.mmpt.typehandlers.JSONTypeHandler}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>